
    public static Intent newIntent(Context context) {
        Intent intent = new Intent(context, MainActivity.class);
        intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);
        return intent;
    }



//    // GetFollowingCountHandler
//
//    private class GetFollowingCountHandler extends Handler {
//
//        public GetFollowingCountHandler() {
//            super(Looper.getMainLooper());
//        }
//
//        @Override
//        public void handleMessage(@NonNull Message msg) {
//            boolean success = msg.getData().getBoolean(GetFollowingCountTask.SUCCESS_KEY);
//            if (success) {
//                int count = msg.getData().getInt(GetFollowingCountTask.COUNT_KEY);
//                followeeCount.setText(getString(R.string.followeeCount, String.valueOf(count)));
//            } else if (msg.getData().containsKey(GetFollowingCountTask.MESSAGE_KEY)) {
//                String message = msg.getData().getString(GetFollowingCountTask.MESSAGE_KEY);
//                Toast.makeText(MainActivity.this, "Failed to get following count: " + message, Toast.LENGTH_LONG).show();
//            } else if (msg.getData().containsKey(GetFollowingCountTask.EXCEPTION_KEY)) {
//                Exception ex = (Exception) msg.getData().getSerializable(GetFollowingCountTask.EXCEPTION_KEY);
//                Toast.makeText(MainActivity.this, "Failed to get following count because of exception: " + ex.getMessage(), Toast.LENGTH_LONG).show();
//            }
//        }
//    }

//    // IsFollowerHandler
//
//    private class IsFollowerHandler extends Handler {
//
//        public IsFollowerHandler() {
//            super(Looper.getMainLooper());
//        }
//
//        @Override
//        public void handleMessage(@NonNull Message msg) {
//            boolean success = msg.getData().getBoolean(IsFollowerTask.SUCCESS_KEY);
//            if (success) {
//                boolean isFollower = msg.getData().getBoolean(IsFollowerTask.IS_FOLLOWER_KEY);
//
//                // If logged in user if a follower of the selected user, display the follow button as "following"
//                if (isFollower) {
//                    followButton.setText(R.string.following);
//                    followButton.setBackgroundColor(getResources().getColor(R.color.white));
//                    followButton.setTextColor(getResources().getColor(R.color.lightGray));
//                } else {
//                    followButton.setText(R.string.follow);
//                    followButton.setBackgroundColor(getResources().getColor(R.color.colorAccent));
//                }
//            } else if (msg.getData().containsKey(IsFollowerTask.MESSAGE_KEY)) {
//                String message = msg.getData().getString(IsFollowerTask.MESSAGE_KEY);
//                Toast.makeText(MainActivity.this, "Failed to determine following relationship: " + message, Toast.LENGTH_LONG).show();
//            } else if (msg.getData().containsKey(IsFollowerTask.EXCEPTION_KEY)) {
//                Exception ex = (Exception) msg.getData().getSerializable(IsFollowerTask.EXCEPTION_KEY);
//                Toast.makeText(MainActivity.this, "Failed to determine following relationship because of exception: " + ex.getMessage(), Toast.LENGTH_LONG).show();
//            }
//        }
//    }

    // FollowHandler

//    private class FollowHandler extends Handler {
//
//        public FollowHandler() {
//            super(Looper.getMainLooper());
//        }
//
//        @Override
//        public void handleMessage(@NonNull Message msg) {
//            boolean success = msg.getData().getBoolean(FollowTask.SUCCESS_KEY);
//            if (success) {
//                updateSelectedUserFollowingAndFollowers();
//                updateFollowButton(false);
//            } else if (msg.getData().containsKey(FollowTask.MESSAGE_KEY)) {
//                String message = msg.getData().getString(FollowTask.MESSAGE_KEY);
//                Toast.makeText(MainActivity.this, "Failed to follow: " + message, Toast.LENGTH_LONG).show();
//            } else if (msg.getData().containsKey(FollowTask.EXCEPTION_KEY)) {
//                Exception ex = (Exception) msg.getData().getSerializable(FollowTask.EXCEPTION_KEY);
//                Toast.makeText(MainActivity.this, "Failed to follow because of exception: " + ex.getMessage(), Toast.LENGTH_LONG).show();
//            }
//
//            followButton.setEnabled(true);
//        }
//    }

    // UnfollowHandler

//    private class UnfollowHandler extends Handler {
//
//        public UnfollowHandler() {
//            super(Looper.getMainLooper());
//        }
//
//        @Override
//        public void handleMessage(@NonNull Message msg) {
//            boolean success = msg.getData().getBoolean(UnfollowTask.SUCCESS_KEY);
//            if (success) {
//                updateSelectedUserFollowingAndFollowers();
//                updateFollowButton(true);
//            } else if (msg.getData().containsKey(UnfollowTask.MESSAGE_KEY)) {
//                String message = msg.getData().getString(UnfollowTask.MESSAGE_KEY);
//                Toast.makeText(MainActivity.this, "Failed to unfollow: " + message, Toast.LENGTH_LONG).show();
//            } else if (msg.getData().containsKey(UnfollowTask.EXCEPTION_KEY)) {
//                Exception ex = (Exception) msg.getData().getSerializable(UnfollowTask.EXCEPTION_KEY);
//                Toast.makeText(MainActivity.this, "Failed to unfollow because of exception: " + ex.getMessage(), Toast.LENGTH_LONG).show();
//            }
//
//            followButton.setEnabled(true);
//        }
//    }